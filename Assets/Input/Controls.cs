//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""ab36e899-937a-4404-b088-457d9ed97f6a"",
            ""actions"": [
                {
                    ""name"": ""Player1Move"",
                    ""type"": ""Value"",
                    ""id"": ""979591f3-d870-4a94-a859-b28a5c0e76f2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player1Interact"",
                    ""type"": ""Button"",
                    ""id"": ""40dcd0e1-eb7a-4cf9-92c1-d9eb0f77cd1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player1Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""b2a0185a-76f3-443b-8763-df85780de052"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Move"",
                    ""type"": ""Value"",
                    ""id"": ""b4a624ee-8720-4609-889d-d8f456a76d05"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""eb030ce0-611d-4f1a-a9d7-6764b2d5ff87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Interact"",
                    ""type"": ""Button"",
                    ""id"": ""25d34275-4684-487d-952a-2612e24f3f4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7791b06c-7e76-4898-801f-5c141a370aac"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""63b51c1f-58d2-47c6-a4db-08d44db59084"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f6641569-0012-4399-93a5-a94a4607a557"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5c83c61b-d3ce-48fc-b35c-3ac60ffb8fc8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1fad0821-1bd7-4d67-918c-624e17c71b72"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""34c8fcb6-2ab1-4c7d-ade8-3d949fa4a867"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5670c771-9099-4088-9b74-289120fc5b72"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""61720434-7e7e-4df4-99e5-9842fb103ff4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d780eebf-0ecb-49b0-b8cc-fa7a003740da"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7f9c422f-5b48-4c9b-bacf-41f7da49e674"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bf5f8d4c-47af-4436-9e6a-97d3b06400bb"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c3f3613-3489-44e3-b0da-0c1a0d31a30c"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8219b8fc-1fbb-4354-b3f3-2ffb3bc2162a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83b533fc-bac6-4054-adc8-159f3275e5c7"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_Player1Move = m_Movement.FindAction("Player1Move", throwIfNotFound: true);
        m_Movement_Player1Interact = m_Movement.FindAction("Player1Interact", throwIfNotFound: true);
        m_Movement_Player1Shoot = m_Movement.FindAction("Player1Shoot", throwIfNotFound: true);
        m_Movement_Player2Move = m_Movement.FindAction("Player2Move", throwIfNotFound: true);
        m_Movement_Player2Shoot = m_Movement.FindAction("Player2Shoot", throwIfNotFound: true);
        m_Movement_Player2Interact = m_Movement.FindAction("Player2Interact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_Player1Move;
    private readonly InputAction m_Movement_Player1Interact;
    private readonly InputAction m_Movement_Player1Shoot;
    private readonly InputAction m_Movement_Player2Move;
    private readonly InputAction m_Movement_Player2Shoot;
    private readonly InputAction m_Movement_Player2Interact;
    public struct MovementActions
    {
        private @Controls m_Wrapper;
        public MovementActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player1Move => m_Wrapper.m_Movement_Player1Move;
        public InputAction @Player1Interact => m_Wrapper.m_Movement_Player1Interact;
        public InputAction @Player1Shoot => m_Wrapper.m_Movement_Player1Shoot;
        public InputAction @Player2Move => m_Wrapper.m_Movement_Player2Move;
        public InputAction @Player2Shoot => m_Wrapper.m_Movement_Player2Shoot;
        public InputAction @Player2Interact => m_Wrapper.m_Movement_Player2Interact;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @Player1Move.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Move;
                @Player1Move.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Move;
                @Player1Move.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Move;
                @Player1Interact.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Interact;
                @Player1Interact.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Interact;
                @Player1Interact.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Interact;
                @Player1Shoot.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Shoot;
                @Player1Shoot.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Shoot;
                @Player1Shoot.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer1Shoot;
                @Player2Move.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Move;
                @Player2Move.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Move;
                @Player2Move.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Move;
                @Player2Shoot.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Shoot;
                @Player2Shoot.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Shoot;
                @Player2Shoot.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Shoot;
                @Player2Interact.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Interact;
                @Player2Interact.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Interact;
                @Player2Interact.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPlayer2Interact;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Player1Move.started += instance.OnPlayer1Move;
                @Player1Move.performed += instance.OnPlayer1Move;
                @Player1Move.canceled += instance.OnPlayer1Move;
                @Player1Interact.started += instance.OnPlayer1Interact;
                @Player1Interact.performed += instance.OnPlayer1Interact;
                @Player1Interact.canceled += instance.OnPlayer1Interact;
                @Player1Shoot.started += instance.OnPlayer1Shoot;
                @Player1Shoot.performed += instance.OnPlayer1Shoot;
                @Player1Shoot.canceled += instance.OnPlayer1Shoot;
                @Player2Move.started += instance.OnPlayer2Move;
                @Player2Move.performed += instance.OnPlayer2Move;
                @Player2Move.canceled += instance.OnPlayer2Move;
                @Player2Shoot.started += instance.OnPlayer2Shoot;
                @Player2Shoot.performed += instance.OnPlayer2Shoot;
                @Player2Shoot.canceled += instance.OnPlayer2Shoot;
                @Player2Interact.started += instance.OnPlayer2Interact;
                @Player2Interact.performed += instance.OnPlayer2Interact;
                @Player2Interact.canceled += instance.OnPlayer2Interact;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);
    public interface IMovementActions
    {
        void OnPlayer1Move(InputAction.CallbackContext context);
        void OnPlayer1Interact(InputAction.CallbackContext context);
        void OnPlayer1Shoot(InputAction.CallbackContext context);
        void OnPlayer2Move(InputAction.CallbackContext context);
        void OnPlayer2Shoot(InputAction.CallbackContext context);
        void OnPlayer2Interact(InputAction.CallbackContext context);
    }
}
